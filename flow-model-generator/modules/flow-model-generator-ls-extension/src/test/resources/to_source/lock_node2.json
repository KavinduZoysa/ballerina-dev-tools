{
  "description": "Sample diagram node",
  "diagram": {
    "id": "38972",
    "label": "Lock",
    "description": "Allow to access mutable states safely",
    "kind": "LOCK",
    "lineRange": {
      "fileName": "lock.bal",
      "startLine": {
        "line": 7,
        "offset": 4
      },
      "endLine": {
        "line": 12,
        "offset": 5
      }
    },
    "returning": false,
    "branches": [
      {
        "label": "Body",
        "kind": "BLOCK",
        "children": [
          {
            "id": "39946",
            "label": "Custom Expression",
            "description": "Represents a custom Ballerina expression",
            "kind": "EXPRESSION",
            "lineRange": {
              "fileName": "lock.bal",
              "startLine": {
                "line": 8,
                "offset": 8
              },
              "endLine": {
                "line": 8,
                "offset": 18
              }
            },
            "returning": false,
            "nodeProperties": {
              "expression": {
                "label": "Expression",
                "type": "int",
                "value": "0",
                "typeKind": "BTYPE",
                "optional": false,
                "editable": true,
                "documentation": "Expression"
              },
              "variable": {
                "label": "Variable",
                "type": "int",
                "value": "i ",
                "typeKind": "BTYPE",
                "optional": false,
                "editable": true,
                "documentation": "Result Variable"
              }
            },
            "flags": 0
          },
          {
            "id": "40991",
            "label": "Lock",
            "description": "Allow to access mutable states safely",
            "kind": "LOCK",
            "lineRange": {
              "fileName": "lock.bal",
              "startLine": {
                "line": 9,
                "offset": 8
              },
              "endLine": {
                "line": 11,
                "offset": 9
              }
            },
            "returning": false,
            "branches": [
              {
                "label": "Body",
                "kind": "BLOCK",
                "children": [
                  {
                    "id": "42054",
                    "label": "Custom Expression",
                    "description": "Represents a custom Ballerina expression",
                    "kind": "EXPRESSION",
                    "lineRange": {
                      "fileName": "lock.bal",
                      "startLine": {
                        "line": 10,
                        "offset": 12
                      },
                      "endLine": {
                        "line": 10,
                        "offset": 18
                      }
                    },
                    "returning": false,
                    "nodeProperties": {
                      "expression": {
                        "label": "Expression",
                        "type": "int",
                        "value": "3",
                        "typeKind": "BTYPE",
                        "optional": false,
                        "editable": true,
                        "documentation": "Expression"
                      },
                      "variable": {
                        "label": "Variable",
                        "type": "int",
                        "value": "i",
                        "typeKind": "BTYPE",
                        "optional": false,
                        "editable": true,
                        "documentation": "Result Variable"
                      }
                    },
                    "flags": 0
                  }
                ]
              }
            ],
            "flags": 0
          }
        ]
      }
    ],
    "flags": 0
  },
  "output": [
    {
      "range": {
        "start": {
          "line": 7,
          "character": 4
        },
        "end": {
          "line": 12,
          "character": 5
        }
      },
      "newText": "lock {\n    int i = 0;\n    lock {\n        int i = 3;\n    }\n}"
    }
  ]
}
